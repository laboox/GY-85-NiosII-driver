/*
 * i2c_controller.h
 *
 *  Created on: Jul 7, 2015
 *      Author: vaio
 */

#ifndef I2C_CONTROLLER_H_
#define I2C_CONTROLLER_H_

#include "oc_i2c_master.h"

void i2c_init(){
	IOWR_8DIRECT(IIC_BASE, OC_I2C_PRER_LO, 0x90);
	IOWR_8DIRECT(IIC_BASE, OC_I2C_PRER_HI, 0x01);
	IOWR_8DIRECT(IIC_BASE, OC_I2C_CTR, OC_I2C_EN);
}

unsigned char i2c_check_rxAck(){
	return !(IORD_8DIRECT(IIC_BASE, OC_I2C_SR) & OC_I2C_RXACK);
}

unsigned char i2c_write(unsigned char data, unsigned char start, unsigned char stop)
{
	IOWR_8DIRECT(IIC_BASE, OC_I2C_TXR, data);
    if(!start && !stop)
    	IOWR_8DIRECT(IIC_BASE, OC_I2C_CR, OC_I2C_WR);
    else if(start)
    	IOWR_8DIRECT(IIC_BASE, OC_I2C_CR, OC_I2C_WR | OC_I2C_STA);
    else if(stop)
    	IOWR_8DIRECT(IIC_BASE, OC_I2C_CR, OC_I2C_WR | OC_I2C_STO);
    while (IORD_8DIRECT(IIC_BASE, OC_I2C_SR) & OC_I2C_TIP);
    usleep(1000);
    return i2c_check_rxAck();
}

unsigned char i2c_read(unsigned char start, unsigned char stop, unsigned char ack)
{
	unsigned char status = OC_I2C_RD | (start?OC_I2C_STA:0x00) | (stop?OC_I2C_STO:0x00) | (ack?0:OC_I2C_ACK);
	IOWR_8DIRECT(IIC_BASE, OC_I2C_CR, status);
	while (IORD_8DIRECT(IIC_BASE, OC_I2C_SR) & OC_I2C_TIP);
	usleep(1000);
	return IORD_8DIRECT(IIC_BASE, OC_I2C_RXR);
}


#endif /* I2C_CONTROLLER_H_ */
